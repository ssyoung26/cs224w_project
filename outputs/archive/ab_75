Namespace(train_path='data/sabdab_2022_02_75/train_data.jsonl', val_path='data/sabdab_2022_02_75/val_data.jsonl', test_path='data/sabdab_2022_02_75/test_data.jsonl', save_dir='ckpts/tmp', load_model=None, cdr_type='3', hidden_size=256, batch_tokens=100, k_neighbors=9, block_size=8, update_freq=1, depth=4, vocab_size=21, num_rbf=16, dropout=0.1, lr=0.001, clip_norm=5.0, epochs=10, seed=7, anneal_rate=0.9, print_iter=50)
Training:3266, Validation:253, Test:263
/content/RefineGNN/ab_train_2.py:112: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  scaler = GradScaler()
  0% 0/513 [00:00<?, ?it/s]/content/RefineGNN/ab_train_2.py:128: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with autocast():
/content/RefineGNN/structgen/hierarchical2.py:192: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast():
/content/RefineGNN/structgen/protein_features.py:302: UserWarning: Using torch.cross without specifying the dim arg is deprecated.
Please either pass the dim explicitly or simply use torch.linalg.cross.
The default value of dim will change to agree with that of linalg.cross in a future release. (Triggered internally at ../aten/src/ATen/native/Cross.cpp:62.)
  n_2 = F.normalize(torch.cross(u_2, u_1), dim=-1)
/usr/local/lib/python3.10/dist-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
 10% 49/513 [00:40<06:22,  1.21it/s][50] Train PPL = 19.705
 19% 99/513 [01:23<07:43,  1.12s/it][100] Train PPL = 16.186
 29% 149/513 [02:03<04:38,  1.31it/s][150] Train PPL = 14.757
 39% 199/513 [02:44<04:52,  1.07it/s][200] Train PPL = 14.111
 49% 249/513 [03:30<03:20,  1.32it/s][250] Train PPL = 13.333
 58% 299/513 [04:21<04:05,  1.15s/it][300] Train PPL = 13.208
 68% 349/513 [05:08<02:08,  1.27it/s][350] Train PPL = 13.278
 78% 399/513 [05:53<01:29,  1.27it/s][400] Train PPL = 13.315
 88% 449/513 [06:38<01:05,  1.02s/it][450] Train PPL = 12.756
 97% 499/513 [07:30<00:15,  1.13s/it][500] Train PPL = 12.826
100% 513/513 [07:44<00:00,  1.11it/s]
  0% 0/42 [00:00<?, ?it/s]/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:87: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
100% 42/42 [00:59<00:00,  1.41s/it]
Epoch 0, Val PPL = 12.885, Val RMSD = 6.850
 10% 49/513 [00:42<06:41,  1.16it/s][50] Train PPL = 12.274
 19% 99/513 [01:31<06:20,  1.09it/s][100] Train PPL = 12.795
 29% 149/513 [02:14<04:30,  1.35it/s][150] Train PPL = 11.482
 39% 199/513 [02:57<04:06,  1.28it/s][200] Train PPL = 11.632
 49% 249/513 [03:40<04:02,  1.09it/s][250] Train PPL = 11.400
 58% 299/513 [04:24<02:54,  1.23it/s][300] Train PPL = 11.784
 68% 349/513 [05:08<02:33,  1.07it/s][350] Train PPL = 11.656
 78% 399/513 [05:52<01:42,  1.11it/s][400] Train PPL = 11.325
 88% 449/513 [06:41<01:11,  1.11s/it][450] Train PPL = 11.791
 97% 499/513 [07:24<00:10,  1.27it/s][500] Train PPL = 11.544
100% 513/513 [07:36<00:00,  1.12it/s]
100% 42/42 [01:01<00:00,  1.47s/it]
Epoch 1, Val PPL = 11.717, Val RMSD = 5.878
 10% 49/513 [00:45<07:15,  1.06it/s][50] Train PPL = 10.896
 19% 99/513 [01:34<06:44,  1.02it/s][100] Train PPL = 11.329
 29% 149/513 [02:31<06:47,  1.12s/it][150] Train PPL = 11.603
 39% 199/513 [03:19<04:34,  1.14it/s][200] Train PPL = 10.761
 49% 249/513 [04:08<04:29,  1.02s/it][250] Train PPL = 10.815
 58% 299/513 [04:52<03:23,  1.05it/s][300] Train PPL = 10.544
 68% 349/513 [05:36<01:49,  1.50it/s][350] Train PPL = 10.500
 78% 399/513 [06:18<01:25,  1.33it/s][400] Train PPL = 10.195
 88% 449/513 [07:07<00:56,  1.13it/s][450] Train PPL = 10.799
 97% 499/513 [07:55<00:11,  1.23it/s][500] Train PPL = 10.287
100% 513/513 [08:09<00:00,  1.05it/s]
100% 42/42 [01:00<00:00,  1.43s/it]
Epoch 2, Val PPL = 11.041, Val RMSD = 2.967
 10% 49/513 [00:39<06:17,  1.23it/s][50] Train PPL = 9.458
 19% 99/513 [01:22<06:00,  1.15it/s][100] Train PPL = 10.639
 29% 149/513 [02:05<05:14,  1.16it/s][150] Train PPL = 9.800
 39% 199/513 [02:53<04:18,  1.21it/s][200] Train PPL = 10.142
 49% 249/513 [03:40<04:44,  1.08s/it][250] Train PPL = 10.683
 58% 299/513 [04:22<02:45,  1.29it/s][300] Train PPL = 9.819
 68% 349/513 [05:12<03:05,  1.13s/it][350] Train PPL = 11.240
 78% 399/513 [05:52<01:20,  1.41it/s][400] Train PPL = 9.749
 88% 449/513 [06:36<01:05,  1.03s/it][450] Train PPL = 9.704
 97% 499/513 [07:22<00:14,  1.04s/it][500] Train PPL = 10.215
100% 513/513 [07:35<00:00,  1.13it/s]
100% 42/42 [00:57<00:00,  1.37s/it]
Epoch 3, Val PPL = 10.838, Val RMSD = 4.436
 10% 49/513 [00:49<06:18,  1.23it/s][50] Train PPL = 10.951
 19% 99/513 [01:34<05:20,  1.29it/s][100] Train PPL = 9.898
 29% 149/513 [02:15<04:56,  1.23it/s][150] Train PPL = 9.205
 39% 199/513 [03:01<08:17,  1.59s/it][200] Train PPL = 9.971
 49% 249/513 [03:44<04:12,  1.05it/s][250] Train PPL = 9.158
 58% 299/513 [04:25<02:36,  1.37it/s][300] Train PPL = 9.898
 68% 349/513 [05:07<02:04,  1.32it/s][350] Train PPL = 9.693
 78% 399/513 [05:51<01:56,  1.02s/it][400] Train PPL = 9.661
 88% 449/513 [06:32<01:02,  1.02it/s][450] Train PPL = 9.116
 97% 499/513 [07:21<00:19,  1.37s/it][500] Train PPL = 9.763
100% 513/513 [07:33<00:00,  1.13it/s]
100% 42/42 [00:57<00:00,  1.37s/it]
Epoch 4, Val PPL = 10.580, Val RMSD = 3.019
 10% 49/513 [00:39<05:57,  1.30it/s][50] Train PPL = 8.536
 19% 99/513 [01:23<06:55,  1.00s/it][100] Train PPL = 9.606
 29% 149/513 [02:13<05:43,  1.06it/s][150] Train PPL = 9.908
 39% 199/513 [03:01<04:12,  1.24it/s][200] Train PPL = 9.553
 49% 249/513 [03:45<03:11,  1.38it/s][250] Train PPL = 9.121
 58% 299/513 [04:28<02:34,  1.39it/s][300] Train PPL = 9.074
 68% 349/513 [05:15<02:46,  1.01s/it][350] Train PPL = 9.373
 78% 399/513 [06:01<01:38,  1.16it/s][400] Train PPL = 9.614
 88% 449/513 [06:55<01:03,  1.01it/s][450] Train PPL = 10.015
 97% 499/513 [07:36<00:10,  1.37it/s][500] Train PPL = 8.802
100% 513/513 [07:46<00:00,  1.10it/s]
100% 42/42 [00:57<00:00,  1.37s/it]
Epoch 5, Val PPL = 10.394, Val RMSD = 2.762
 10% 49/513 [00:43<07:04,  1.09it/s][50] Train PPL = 9.344
 19% 99/513 [01:31<05:41,  1.21it/s][100] Train PPL = 8.376
 29% 149/513 [02:16<04:07,  1.47it/s][150] Train PPL = 10.003
 39% 199/513 [02:59<06:12,  1.19s/it][200] Train PPL = 9.056
 49% 249/513 [03:43<03:49,  1.15it/s][250] Train PPL = 9.253
 58% 299/513 [04:30<04:08,  1.16s/it][300] Train PPL = 9.554
 68% 349/513 [05:13<01:59,  1.37it/s][350] Train PPL = 9.698
 78% 399/513 [05:53<01:28,  1.29it/s][400] Train PPL = 8.573
 88% 449/513 [06:34<00:51,  1.23it/s][450] Train PPL = 8.789
 97% 499/513 [07:23<00:15,  1.07s/it][500] Train PPL = 9.861
100% 513/513 [07:35<00:00,  1.13it/s]
100% 42/42 [00:57<00:00,  1.37s/it]
Epoch 6, Val PPL = 10.485, Val RMSD = 2.948
 10% 49/513 [00:43<06:56,  1.11it/s][50] Train PPL = 8.996
 19% 99/513 [01:28<05:40,  1.22it/s][100] Train PPL = 9.078
 29% 149/513 [02:13<05:41,  1.06it/s][150] Train PPL = 8.642
 39% 199/513 [02:52<04:44,  1.10it/s][200] Train PPL = 8.204
 49% 249/513 [03:36<04:41,  1.07s/it][250] Train PPL = 9.044
 58% 299/513 [04:21<02:37,  1.36it/s][300] Train PPL = 8.961
 68% 349/513 [05:04<02:38,  1.04it/s][350] Train PPL = 9.112
 78% 399/513 [05:51<01:39,  1.15it/s][400] Train PPL = 8.340
 88% 449/513 [06:35<01:01,  1.05it/s][450] Train PPL = 9.268
 97% 499/513 [07:23<00:11,  1.19it/s][500] Train PPL = 8.569
100% 513/513 [07:35<00:00,  1.13it/s]
100% 42/42 [00:57<00:00,  1.37s/it]
Epoch 7, Val PPL = 10.249, Val RMSD = 2.955
 10% 49/513 [00:40<07:42,  1.00it/s][50] Train PPL = 8.251
 19% 99/513 [01:20<05:37,  1.23it/s][100] Train PPL = 8.176
 29% 149/513 [02:05<05:55,  1.02it/s][150] Train PPL = 8.514
 39% 199/513 [02:48<04:48,  1.09it/s][200] Train PPL = 8.772
 49% 249/513 [03:36<03:36,  1.22it/s][250] Train PPL = 9.035
 58% 299/513 [04:27<03:03,  1.17it/s][300] Train PPL = 8.611
 68% 349/513 [05:11<02:19,  1.18it/s][350] Train PPL = 8.904
 78% 399/513 [05:53<01:17,  1.48it/s][400] Train PPL = 7.859
 88% 449/513 [06:39<01:00,  1.05it/s][450] Train PPL = 8.475
 97% 499/513 [07:21<00:13,  1.08it/s][500] Train PPL = 9.055
100% 513/513 [07:34<00:00,  1.13it/s]
100% 42/42 [00:57<00:00,  1.37s/it]
Epoch 8, Val PPL = 10.246, Val RMSD = 2.756
 10% 49/513 [00:38<06:16,  1.23it/s][50] Train PPL = 7.862
 19% 99/513 [01:23<05:05,  1.35it/s][100] Train PPL = 8.315
 29% 149/513 [02:04<05:09,  1.18it/s][150] Train PPL = 7.928
 39% 199/513 [02:47<04:54,  1.07it/s][200] Train PPL = 8.563
 49% 249/513 [03:33<03:39,  1.20it/s][250] Train PPL = 8.356
 58% 299/513 [04:18<03:08,  1.14it/s][300] Train PPL = 8.238
 68% 349/513 [05:01<02:09,  1.27it/s][350] Train PPL = 8.076
 78% 399/513 [05:45<01:29,  1.28it/s][400] Train PPL = 8.282
 88% 449/513 [06:33<00:49,  1.28it/s][450] Train PPL = 8.570
 97% 499/513 [07:22<00:12,  1.12it/s][500] Train PPL = 9.070
100% 513/513 [07:36<00:00,  1.12it/s]
100% 42/42 [00:58<00:00,  1.40s/it]
Epoch 9, Val PPL = 10.368, Val RMSD = 2.652
/content/RefineGNN/ab_train_2.py:157: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(best_ckpt)[0])
100% 43/43 [00:58<00:00,  1.35s/it]
Test PPL = 10.724, Test RMSD = 2.624
